syntax = "proto3";
package local;

message ServerConnection {
    required string name = 1;
    required string connect_address = 2;
    required string connect_port = 3;
    required bool encrypted = 4;
    required bool fixed = 5;
    repeated string clients = 6;
    optional uint32 connected = 7;
}

message ClientConnection {
    required string name = 1;
    optional string listen_address = 2;
    optional string listen_port = 3;
    required bool encrypted = 4;
    required bool fixed = 5;
    optional string server = 6;
    optional uint32 connected = 7;
}

message ConnectionsList {
    repeated ServerConnection server_connections = 1;
    repeated ClientConnection client_connections = 2;
}

message InitRequest {
    optional string tracker_name = 1;
    required string email = 2;
}

message InitResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        EMAIL_EXISTS = 10;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
    }
    required Result response = 1;
}

message ConfirmRequest {
    required string tracker_name = 1;
    required string token = 2;
}

message ConfirmResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
    }
    required Result response = 1;
    optional string token = 2;
}

message CreateDaemonRequest {
    required string tracker_name = 1;
    required string token = 2;
    optional string daemon_name = 3;
    optional bool randomize = 4;
}

message CreateDaemonResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_NAME = 10;
        NAME_EXISTS = 11;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
    }
    required Result response = 1;
    optional string daemon_name = 2;
    optional string token = 3;
}

message SetTokenRequest {
    enum Type {
        MASTER = 0;
        DAEMON = 1;
    }
    required Type type = 1;
    required string token = 2;
    optional string tracker_name = 3;
}

message SetTokenResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message CreateRequest {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    required string tracker_name = 1;
    required string daemon_name = 2;
    required string path = 3;
    required Type type = 4;
    required bool encrypted = 5;
    required bool fixed = 6;
    optional string connect_address = 7;
    required string connect_port = 8;
    optional string listen_address = 9;
    optional string listen_port = 10;
}

message CreateResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_EXISTS = 11;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
    optional string server_token = 2;
    optional string client_token = 3;
    optional ConnectionsList updates = 4;
}

message DeleteRequest {
    required string tracker_name = 1;
    required string path = 2;
}

message DeleteResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
}

message ImportRequest {
    required string tracker_name = 1;
    required string token = 2;
}

message ImportResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
    optional ConnectionsList updates = 2;
}

message AttachRequest {
    required string tracker_name = 1;
    optional string daemon_name = 2;
    required string path = 3;
    optional string address_override = 4;
    optional string port_override = 5;
}

message AttachResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        ALREADY_ATTACHED = 20;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
    optional ConnectionsList updates = 2;
}

message DetachRequest {
    required string tracker_name = 1;
    optional string daemon_name = 2;
    required string path = 3;
}

message DetachResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        NOT_ATTACHED = 20;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
}

message TreeRequest {
    required string tracker_name = 1;
    required string daemon_name = 2;
    optional string path = 3;
}

message Tree {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    repeated Tree tree = 1;
    required bool connection = 2;
    required Type type = 3;
    required string name = 4;
    required string path = 5;
    optional uint32 servers_number = 6;
    optional string connect_address = 7;
    optional string connect_port = 8;
    optional uint32 clients_number = 9;
    optional string listen_address = 10;
    optional string listen_port = 11;
    optional bool encrypted = 12;
    optional bool fixed = 13;
}

message TreeResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
    optional Tree tree = 2;
}

message ConnectionsListRequest {
    required string tracker_name = 1;
}

message ConnectionsListResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
    optional ConnectionsList list = 2;
}

message SetConnectionsRequest {
    required string tracker_name = 1;
    required ConnectionsList list = 2;
}

message SetConnectionsResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message GetConnectionsRequest {
    required string tracker_name = 1;
}

message GetConnectionsResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        NO_TRACKER = 9010;
        NOT_REGISTERED = 9020;
    }
    required Result response = 1;
    optional ConnectionsList active_list = 2;
    optional ConnectionsList imported_list = 3;
}

message ImportConnectionsRequest {
    required string tracker_name = 1;
    required string token = 2;
    required ConnectionsList list = 3;
}

message ImportConnectionsResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message UpdateConnectionsRequest {
    required string tracker_name = 1;
    required ConnectionsList list = 2;
}

message UpdateConnectionsResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message RedeemMasterRequest {
    required string tracker_name = 1;
    required string email = 2;
}

message RedeemMasterResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
    }
    required Result response = 1;
}

message RedeemDaemonRequest {
    required string tracker_name = 1;
    required string token = 2;
    required string daemon_name = 3;
}

message RedeemDaemonResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
    }
    required Result response = 1;
    optional string token = 2;
}

message RedeemPathRequest {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
    }
    required string tracker_name = 1;
    required string token = 2;
    required string path = 3;
    required Type type = 4;
}

message RedeemPathResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
        NO_TRACKER = 9010;
    }
    required Result response = 1;
    optional string token = 2;
}

message ClientMessage {
    enum Type {
        INIT_REQUEST = 0;
        CONFIRM_REQUEST = 1;
        CREATE_DAEMON_REQUEST = 10;
        SET_TOKEN_REQUEST = 20;
        CREATE_REQUEST = 30;
        DELETE_REQUEST = 40;
        IMPORT_REQUEST = 50;
        ATTACH_REQUEST = 60;
        DETACH_REQUEST = 70;
        TREE_REQUEST = 80;
        CONNECTIONS_LIST_REQUEST = 90;
        SET_CONNECTIONS_REQUEST = 100;
        GET_CONNECTIONS_REQUEST = 101;
        IMPORT_CONNECTIONS_REQUEST = 110;
        UPDATE_CONNECTIONS_REQUEST = 111;
        REDEEM_MASTER_REQUEST = 120;
        REDEEM_DAEMON_REQUEST = 121;
        REDEEM_PATH_REQUEST = 122;
    }
    required Type type = 1;
    optional InitRequest init_request = 100;
    optional ConfirmRequest confirm_request = 110;
    optional CreateDaemonRequest create_daemon_request = 200;
    optional SetTokenRequest set_token_request = 300;
    optional CreateRequest create_request = 400;
    optional DeleteRequest delete_request = 500;
    optional ImportRequest import_request = 600;
    optional AttachRequest attach_request = 700;
    optional DetachRequest detach_request = 800;
    optional TreeRequest tree_request = 900;
    optional ConnectionsListRequest connections_list_request = 1000;
    optional SetConnectionsRequest set_connections_request = 1100;
    optional GetConnectionsRequest get_connections_request = 1110;
    optional ImportConnectionsRequest import_connections_request = 1200;
    optional UpdateConnectionsRequest update_connections_request = 1210;
    optional RedeemMasterRequest redeem_master_request = 1300;
    optional RedeemDaemonRequest redeem_daemon_request = 1310;
    optional RedeemPathRequest redeem_path_request = 1320;
}

message ServerMessage {
    enum Type {
        INIT_RESPONSE = 0;
        CONFIRM_RESPONSE = 1;
        CREATE_DAEMON_RESPONSE = 10;
        SET_TOKEN_RESPONSE = 20;
        CREATE_RESPONSE = 30;
        DELETE_RESPONSE = 40;
        IMPORT_RESPONSE = 50;
        ATTACH_RESPONSE = 60;
        DETACH_RESPONSE = 70;
        TREE_RESPONSE = 80;
        CONNECTIONS_LIST_RESPONSE = 90;
        SET_CONNECTIONS_RESPONSE = 100;
        GET_CONNECTIONS_RESPONSE = 101;
        IMPORT_CONNECTIONS_RESPONSE = 110;
        UPDATE_CONNECTIONS_RESPONSE = 111;
        REDEEM_MASTER_RESPONSE = 120;
        REDEEM_DAEMON_RESPONSE = 121;
        REDEEM_PATH_RESPONSE = 122;
    }
    required Type type = 1;
    optional InitResponse init_response = 100;
    optional ConfirmResponse confirm_response = 110;
    optional CreateDaemonResponse create_daemon_response = 200;
    optional SetTokenResponse set_token_response = 300;
    optional CreateResponse create_response = 400;
    optional DeleteResponse delete_response = 500;
    optional ImportResponse import_response = 600;
    optional AttachResponse attach_response = 700;
    optional DetachResponse detach_response = 800;
    optional TreeResponse tree_response = 900;
    optional ConnectionsListResponse connections_list_response = 1000;
    optional SetConnectionsResponse set_connections_response = 1100;
    optional GetConnectionsResponse get_connections_response = 1110;
    optional ImportConnectionsResponse import_connections_response = 1200;
    optional UpdateConnectionsResponse update_connections_response = 1210;
    optional RedeemMasterResponse redeem_master_response = 1300;
    optional RedeemDaemonResponse redeem_daemon_response = 1310;
    optional RedeemPathResponse redeem_path_response = 1320;
}