syntax = "proto3";
package local;

message InitRequest {
    optional string tracker_name = 1;
    required string email = 2;
}

message InitResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        EMAIL_EXISTS = 10;
        TIMEOUT = 9000;
    }
    required Result response = 1;
}

message ConfirmRequest {
    required string tracker_name = 1;
    required string token = 2;
}

message ConfirmResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
    }
    required Result response = 1;
    optional string token = 2;
}

message CreateDaemonRequest {
    required string token = 1;
    optional string daemon_name = 2;
    optional bool randomize = 3;
}

message CreateDaemonResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        NAME_EXISTS = 10;
        TIMEOUT = 9000;
    }
    required Result response = 1;
    optional string daemon_name = 2;
    optional string token = 3;
}

message SetTokenRequest {
    required string tracker_name = 1;
    required string token = 2;
}

message SetTokenResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message CreateRequest {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    required string tracker_name = 1;
    required string daemon_name = 2;
    required string path = 3;
    required Type type = 4;
    required bool encrypted = 5;
    required bool fixed = 6;
    optional string connect_address = 7;
    required string connect_port = 8;
    optional string listen_address = 9;
    required string listen_port = 10;
}

message CreateResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_EXISTS = 11;
        TIMEOUT = 9000;
    }
    required Result response = 1;
    optional string server_token = 2;
    optional string client_token = 3;
}

message DeleteRequest {
    required string tracker_name = 1;
    required string path = 2;
}

message DeleteResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        TIMEOUT = 9000;
    }
    required Result response = 1;
}

message ConnectRequest {
    required string tracker_name = 1;
    required string daemon_name = 2;
    required string token = 3;
}

message ConnectResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        ALREADY_CONNECTED = 10;
        TIMEOUT = 9000;
    }
    required Result response = 1;
}

message DisconnectRequest {
    required string tracker_name = 1;
    required string daemon_name = 2;
    required string path = 3;
}

message DisconnectResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        NOT_CONNECTED = 20;
        TIMEOUT = 9000;
    }
    required Result response = 1;
}

message TreeRequest {
    required string tracker_name = 1;
    required string daemon_name = 2;
    optional string path = 3;
}

message Tree {
    enum Type {
        SERVER = 0;
        CLIENT = 1;
        NOT_CONNECTED = 2;
    }
    repeated Tree tree = 1;
    required bool connection = 2;
    required Type type = 3;
    required string name = 4;
    required string path = 5;
    optional string server_token = 6;
    optional uint32 servers_number = 7;
    optional string client_token = 8;
    optional uint32 clients_number = 9;
}

message TreeResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        INVALID_PATH = 10;
        PATH_NOT_FOUND = 11;
        TIMEOUT = 9000;
    }
    required Result response = 1;
    optional Tree tree = 2;
}

message ConnectionsListRequest {
    required string tracker_name = 1;
}

message ServerConnection {
    required string name = 1;
    required string connect_address = 2;
    required string connect_port = 3;
    required bool encrypted = 4;
    required bool fixed = 5;
    repeated string clients = 6;
}

message ClientConnection {
    required string name = 1;
    required string listen_address = 2;
    required string listen_port = 3;
    required bool encrypted = 4;
    optional string server = 5;
}

message ConnectionsList {
    repeated ServerConnection server_connections = 1;
    repeated ClientConnection client_connections = 2;
}

message ConnectionsListResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
        TIMEOUT = 9000;
    }
    required Result response = 1;
    optional ConnectionsList list = 2;
}

message SetConnectionsRequest {
    required string tracker_name = 1;
    required ConnectionsList list = 2;
}

message SetConnectionsResponse {
    enum Result {
        ACCEPTED = 0;
        REJECTED = 1;
    }
    required Result response = 1;
}

message ClientMessage {
    enum Type {
        INIT_REQUEST = 0;
        CONFIRM_REQUEST = 1;
        CREATE_DAEMON_REQUEST = 10;
        SET_TOKEN_REQUEST = 20;
        CREATE_REQUEST = 30;
        DELETE_REQUEST = 40;
        CONNECT_REQUEST = 50;
        DISCONNECT_REQUEST = 60;
        TREE_REQUEST = 70;
        CONNECTIONS_LIST_REQUEST = 80;
        SET_CONNECTIONS_REQUEST = 90;
    }
    required Type type = 1;
    optional InitRequest init_request = 100;
    optional ConfirmRequest confirm_request = 110;
    optional CreateDaemonRequest create_daemon_request = 200;
    optional SetTokenRequest set_token_request = 300;
    optional CreateRequest create_request = 400;
    optional DeleteRequest delete_request = 500;
    optional ConnectRequest connect_request = 600;
    optional DisconnectRequest disconnect_request = 700;
    optional TreeRequest tree_request = 800;
    optional ConnectionsListRequest connections_list_request = 900;
    optional SetConnectionsRequest set_connections_request = 1000;
}

message ServerMessage {
    enum Type {
        INIT_RESPONSE = 0;
        CONFIRM_RESPONSE = 1;
        CREATE_DAEMON_RESPONSE = 10;
        SET_TOKEN_RESPONSE = 20;
        CREATE_RESPONSE = 30;
        DELETE_RESPONSE = 40;
        CONNECT_RESPONSE = 50;
        DISCONNECT_RESPONSE = 60;
        TREE_RESPONSE = 70;
        CONNECTIONS_LIST_RESPONSE = 80;
        SET_CONNECTIONS_RESPONSE = 90;
    }
    required Type type = 1;
    optional InitResponse init_response = 100;
    optional ConfirmResponse confirm_response = 110;
    optional CreateDaemonResponse create_daemon_response = 200;
    optional SetTokenResponse set_token_response = 300;
    optional CreateResponse create_response = 400;
    optional DeleteResponse delete_response = 500;
    optional ConnectResponse connect_response = 600;
    optional DisconnectResponse disconnect_response = 700;
    optional TreeResponse tree_response = 800;
    optional ConnectionsListResponse connections_list_response = 900;
    optional SetConnectionsResponse set_connections_response = 1000;
}